[target.'cfg(target_os = "windows")']
rustflags = ["-C", "panic=abort"]

[target.'cfg(target_os = "linux")']
rustflags = ["-C", "panic=abort"]

[target.'cfg(all(target_arch = "arm", target_os = "none"))']
# Choose a default "cargo run" tool (see README for more info)
# - `probe-rs` provides flashing and defmt via a hardware debugger, and stack unwind on panic
# - elf2uf2-rs loads firmware over USB when the rp2040 is in boot mode
runner = "probe-rs run --chip RP2040 --protocol swd"
# runner = "elf2uf2-rs -d"

rustflags = [
  "-C",
  "linker=flip-link",
  "-C",
  "link-arg=--nmagic",
  "-C",
  "link-arg=-Tlink.x",
  "-C",
  "link-arg=-Tdefmt.x",
  "-C",
  "link-arg=-Map=linker.map",

  # Code-size optimizations.
  #   trap unreachable can save a lot of space, but requires nightly compiler.
  #   uncomment the next line if you wish to enable it
  # "-Z", "trap-unreachable=no",
  "-Cllvm-args=--inline-threshold=5",
  "-C",
  "no-vectorize-loops",
]

[build]
target = "thumbv6m-none-eabi"

[env]
DEFMT_LOG = "info"
WIFI_NETWORK = { value = "wifinet", force = false }
WIFI_PASSWORD = { value = "wifipass", force = false }
